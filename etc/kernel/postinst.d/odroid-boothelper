#!/bin/bash -e

version="$1"

# FIXME: The board specific device symbol to be more generic
#        or can be obtained from the board itself.
device=odroidxu4

zimage=vmlinuz-${version}
uinitrd=uInitrd-${version}
fdtbin=exynos5422-${device}-${version}.dtb

zimage_addr=0x40008000
initrd_addr=0x42000000
fdtbin_addr=0x44000000

loc_fdtbin=${PWD}/arch/arm/boot/dts/exynos5422-${device}.dtb
src_fdtbin=/lib/modules/${version}/boot/${fdtbin}
src_zimage=/lib/modules/${version}/boot/${zimage}

echo "I: scanning block devices..."

#
# Let use select root partition to start up
#
menus=
count=0
blockdevs=`blkid -o device || echo ""`
for i in ${blockdevs}; do
	pttype=`blkid ${i} | grep PTTYPE || echo ""`
	[ ! -z "${pttype}" ] && continue

	target=`findmnt -nr -o target -S ${i} || echo ""`
	if [ ! -z ${target} ]; then
		[ "x${target}" == "x/" ] && flag="on" || flag="off"
		menus="${menus} ${i} ${target} ${flag} "
		count=$[count+1]
	fi
done

echo "I: ${count} device(s) are detected...${blockdevs}"

rootdev="LABEL=rootfs"
if [ "x${count}" != "x0" ]; then
	echo "I: select a partition where to install Linux root file system"
	tempfile=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
	dialog --title "[root partition]" --radiolist "Select root partition:" 12 40 ${count} ${menus} 2> $tempfile
	value=`cat $tempfile`
	rootdev="UUID=`blkid -s UUID -o value ${value}`"
fi

echo "I: installing boot files to /boot"

mkdir -p /lib/modules/${version}/boot

[ -f ${loc_fdtbin} ] && cp ${loc_fdtbin} ${src_fdtbin}
[ -f ${src_fdtbin} ] && cp -f ${src_fdtbin} /boot
[ -f ${src_zimage} ] && cp -f ${src_zimage} /boot

echo "I: creating ramdisk and install as /boot/${uinitrd}"

mkimage -A arm -O linux -T ramdisk -C gzip \
        -a ${initrd_addr} -e ${initrd_addr} -n uInitrd \
        -d /boot/initrd.img-${version} /boot/${uinitrd}

rm -f /boot/initrd.img-${version}

if [ ! -f /boot/boot.ini ]; then
        cat>/boot/boot.ini<<__EOF
ODROIDXU-UBOOT-CONFIG

# U-Boot Parameters (DO NOT MODIFY)
setenv version
setenv zimage vmlinuz-\${version}
setenv uinitrd uInitrd-\${version}
setenv fdtbin exynos5422-${device}-\${version}.dtb

setenv zimage_addr_r ${zimage_addr}
setenv initrd_addr_r ${initrd_addr}
setenv fdtbin_addr_r ${fdtbin_addr}

setenv initrd_high "0xffffffff"
setenv fdt_high "0xffffffff"

# Default boot argument
setenv rootdev
setenv bootrootfs "root=\${rootdev} rootwait ro fsck.repair=yes"
setenv console "console=ttySAC2,115200n8"

setenv bootargs "\${bootrootfs} \${console}"

# boot commands
fatload mmc 0:1 \${zimage_addr_r} \${zimage}
fatload mmc 0:1 \${initrd_addr_r} \${uinitrd}
fatload mmc 0:1 \${fdtbin_addr_r} \${fdtbin}
bootz \${zimage_addr_r} \${initrd_addr_r} \${fdtbin_addr_r}"
__EOF
	echo "I: '/boot/boot.ini' is created."
fi

echo "I: Cleaning up..."

xversion=`grep "^setenv version" /boot/boot.ini | cut -d' ' -f 3`
if [ ! -z ${xversion} ]; then
        rm -f vmlinuz-${xversion}
        rm -f uInitrd-${xversion}
        rm -f exynos5422-${device}-${xversion}.dtb
fi

sed -i "s/^setenv version.*$/setenv version ${version}/g" /boot/boot.ini
sed -i "s/^setenv rootdev.*$/setenv rootdev \"${rootdev}\"/g" /boot/boot.ini

echo "I: Done!!"
